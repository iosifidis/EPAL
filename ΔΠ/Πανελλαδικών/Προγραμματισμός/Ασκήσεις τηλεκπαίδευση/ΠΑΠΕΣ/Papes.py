# -*- coding: cp1253 -*-
'''
Σύμφωνα με τον κανονισμό της Ρωμαιοκαθολικής εκκλησίας, όταν η θέση του Πάπα
«χηρέψει», για την εκλογή ενός νέου προσώπου ακολουθείται η παρακάτω διαδικασία:
Μια ομάδα ανώτερων κληρικών (καρδιναλίων), που αποτελούν το Κονκλάβιο,
συγκεντρώνονται στο παρεκκλήσι της Καπέλα Σιξτίνα του Βατικανού και παραμένουν
κλεισμένοι εκεί μέχρι να εκλέξουν τον νέο Πάπα. Αφού συγκεντρωθούν τα ονόματα
των υποψηφίων, ξεκινά μυστική ψηφοφορία όπου ο κάθε κληρικός ψηφίζει το όνομα
του υποψηφίου που επιθυμεί.
Για να ανακηρυχθεί κάποιος υποψήφιος ως νέος Πάπας θα πρέπει να συγκεντρώσει
τουλάχιστον τα 2/3 των ψήφων των κληρικών του Κονκλάβιου, οπότε και βγαίνει
λευκός καπνός από την καπνοδόχο του παρεκκλησίου, όπου είναι συγκεντρωμένοι.
Σε περίπτωση που η ψηφοφορία αποβεί «άκαρπη», δηλαδή δεν συγκεντρώσει κανένας
υποψήφιος τον απαιτούμενο αριθμό ψήφων, τότε από την καπνοδόχο βγαίνει μαύρος
καπνός και η ψηφοφορία επαναλαμβάνεται.
Στην τελευταία εκλογή Πάπα στο Κονκλάβιο συμμετείχαν 115 κληρικοί και υπήρχαν
18 υποψηφιότητες για τη θέση του Πάπα.

Να γράψετε πρόγραμμα το οποίο:
Δ1.  Θα  διαβάζει  τα  ονόματα  των  υποψηφίων  και  θα  τα  καταχωρεί  σε
λίστα  PAPES. Θεωρούμε πως δεν θα υπάρχουν συνωνυμίες.

Δ2.  Για κάθε κληρικό του Κονκλάβιου θα διαβάζει το όνομα του υποψήφιου που
επέλεξε και θα προσαρμόζει κατάλληλα τον αριθμό των ψήφων αυτού του υποψήφιου
σε αντίστοιχη λίστα. Θεωρούμε ότι το όνομα θα υπάρχει σίγουρα στη λίστα των
υποψηφίων.

Δ3.  Θα εμφανίζει μήνυμα «Μαύρος καπνός» ή «Λευκός καπνός» ανάλογα με το
αποτέλεσμα της ψηφοφορίας.

Δ4.  Θα επαναλαμβάνει την ψηφοφορία μέχρι να εκλεγεί κάποιος από τους
υποψήφιους Πάπας. Στο τέλος να εμφανίζει το όνομά του.

Δ5.  Θα εμφανίζει το μήνυμα «Ο Πάπας ήταν το φαβορί» σε περίπτωση που ο
υποψήφιος που ανακηρύχτηκε Πάπας, είχε πάρει την πρώτη θέση σε όλες τις
ψηφοφορίες που προηγήθηκαν μέχρι και την εκλογή του. Διαφορετικά θα εμφανίζει
το μήνυμα «Αουτσάιντερ».
'''



#Δημιουργώ λίστα με υποψηφίους και λίστα με τις πρωτιές τους (μηδενισμένη)
PAPES=[]
FIRST=[]
for i in range(18):
    pope=raw_input("Dose ipopsifio:")
    PAPES.append(pope)
    FIRST[i]=0

#Έναρξη ψηφοφορίας (όσο ο καπνός είναι μαύρος)
smoke=False
psifoforia=0 #(Η ψηφοφορία μετριέται στο τέλος)
while smoke==False:
    #Μηδενίζω τις ψήφους
    for i in range(18):
        VOTES[i]=0
	
    #Κάθε κονκλάβιος ψηφίζει
    for i in range(115):
        vote=raw_input("Dose psifo:")
        #Η ψήφος του καταχωρίζεται στη λίστα ψήφων 
        #Τροπος 1 (Ψάχνει πάντα όλη τη λίστα υποψηφίων)
        for j in range(18):
            if PAPES[j]==vote:
                VOTES[j]=VOTES[j]+1
        '''
        Τροπος 2 (Ψάχνει μέχρι να βρεί το όνομα του υποψήφιου και σταματάει)
        found=False
        j=1
        while found==False:
            if PAPES[j]==vote:
                found=True
                pos=j
            else:
                j=j+1
            VOTES[pos]=VOTES[pos]+1
        '''
    #Βρίσκω τους μέγιστους ψήφους
    max=0
    max_thesi=0
    for i in range(18):
        if VOTES[i]>max:
            max=VOTES[i]
            max_thesi=i
	
    #Υπολογίζω τους απαιτούμενους ψήφους εκλογής
    valid=2.0/3*115
    #Αν οι μέγιστοι ψήφοι είναι περισσότεροι τότε έχουμε Πάπα, αλλιώς οχι
    if max>valid:
        print "Leukos"
        smoke=True
    else:
        print "Mauros"
        smoke=False

    #Ψάχνω τους υποψηφίους ποιός έχει τους max ψήφους σε αυτή την ψηφοφορία και του προσθέτω μια πρωτιά
    for i in range(18):		
        if VOTES[i]==max:
            FIRST[i]=FIRST[i]+1

    #Νέα ψηφοφορία (εφόσον δεν έχει εκλεγεί Πάπας)
    psifoforia=psifoforia+1		

#Εφόσον βρέθηκε Πάπας είναι αυτός με τις περισσότερες ψήφους
print PAPES[max_thesi]

#Αν οι πρωτιές του Πάπα είναι όσες και οι ψηφοφορίες τότε είναι φαβορί
if FIRST[max_thesi]==psifoforia:
	print "FAVORI"
else:
	print "AOUTSIDER"

	
